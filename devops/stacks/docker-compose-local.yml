version: "3.9"
services:

  traefik:
    image: traefik:v2.10

    ports:
      - 80:80
      - 443:443

    labels:
      - traefik.enable=true
      - traefik.constraint-label=public
      - traefik.http.middlewares.admin-auth.basicauth.users=admin:$$apr1$$HMEDWRPx$$ysfHIWrcngahhdnpuZ6pK1
      - traefik.http.routers.traefik-public-https.rule=Host(`traefik.localhost`)
      - traefik.http.routers.traefik-public-https.entrypoints=https
      - traefik.http.routers.traefik-public-https.tls=true
      - traefik.http.routers.traefik-public-https.service=api@internal
      - traefik.http.routers.traefik-public-https.middlewares=admin-auth
      - traefik.http.services.traefik-public.loadbalancer.server.port=8000

      # GENERIC MIDDLEWARES
      - traefik.http.middlewares.https-redirect.redirectscheme.scheme=https
      - traefik.http.middlewares.https-redirect.redirectscheme.permanent=true
      - traefik.http.middlewares.gzip.compress=true
      - traefik.http.middlewares.gzip.compress.excludedcontenttypes=image/png, image/jpeg, font/woff2

      # GENERIC ROUTERS
      - traefik.http.routers.generic-https-redirect.entrypoints=http
      - traefik.http.routers.generic-https-redirect.rule=HostRegexp(`{host:.*}`)
      - traefik.http.routers.generic-https-redirect.priority=1
      - traefik.http.routers.generic-https-redirect.middlewares=https-redirect

    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro

    command:
      - --providers.docker
      - --providers.docker.constraints=Label(`traefik.constraint-label`, `public`)
      - --providers.docker.exposedbydefault=false
      - --entrypoints.http.address=:80
      - --entrypoints.https.address=:443
      - --providers.file.filename=/config/traefik_config.yaml
      - --accesslog
      - --log
      - --api

  frontend:
    build:
      context: ../../frontend
    environment:
      RAZZLE_INTERNAL_API_PATH: http://backend:8080/Plone
    ports:
      - "3000:3000"
    labels:
      - traefik.enable=true
      - traefik.constraint-label=public
      # Service
      - traefik.http.services.demo-frontend.loadbalancer.server.port=3000
      # Router
      - traefik.http.routers.demo-frontend.rule=Host(`demo.localhost`)
      - traefik.http.routers.demo-frontend.entrypoints=https
      - traefik.http.routers.demo-frontend.tls=true
      - traefik.http.routers.demo-frontend.service=demo-frontend
      - traefik.http.routers.demo-frontend.middlewares=gzip
    depends_on:
      - backend

  backend:
    build:
      context: ../../backend
    labels:
      - traefik.enable=true
      - traefik.constraint-label=public
      # Service
      - traefik.http.services.demo-backend.loadbalancer.server.port=8080
      # Middleware
      - "traefik.http.middlewares.demo-backend-vhm.replacepathregex.regex=^/\\+\\+api\\+\\+($$|/.*)"
      - "traefik.http.middlewares.demo-backend-vhm.replacepathregex.replacement=/VirtualHostBase/https/demo.localhost/Plone/++api++/VirtualHostRoot/$$1"
      # Router
      - traefik.http.routers.demo-backend.rule=Host(`demo.localhost`) && PathPrefix(`/++api++`)
      - traefik.http.routers.demo-backend.entrypoints=https
      - traefik.http.routers.demo-backend.tls=true
      - traefik.http.routers.demo-backend.service=demo-backend
      - traefik.http.routers.demo-backend.middlewares=gzip,demo-backend-vhm

  classic:
    build:
      context: ../../classic
    labels:
      - traefik.enable=true
      - traefik.constraint-label=public
      # Service
      - traefik.http.services.demo-classic.loadbalancer.server.port=8080
      # Middleware
      - "traefik.http.middlewares.demo-classic-vhm.replacepathregex.regex=^/(.*)"
      - "traefik.http.middlewares.demo-classic-vhm.replacepathregex.replacement=/VirtualHostBase/https/classic.demo.localhost/Plone/VirtualHostRoot/$$1"
      # Router
      - traefik.http.routers.demo-classic.rule=Host(`classic.demo.localhost`)
      - traefik.http.routers.demo-classic.entrypoints=https
      - traefik.http.routers.demo-classic.tls=true
      - traefik.http.routers.demo-classic.service=demo-classic
      - traefik.http.routers.demo-classic.middlewares=gzip,demo-classic-vhm
